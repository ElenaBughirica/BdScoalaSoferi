/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scoalasoferi;

/**
 *
 * @author katy
 */


import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

public class Fisa extends javax.swing.JPanel {

    /**
     * Creates new form Fisa
     */
    DefaultTableModel model;
    public Fisa() {
        initComponents();
        model=(DefaultTableModel)jTable1.getModel();
        update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IDFisa", "IDMasina", "Data", "Interventii"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable1MouseEntered(evt);
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 835, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseEntered
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_jTable1MouseEntered

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        // TODO add your handling code here:
                    if ("tableCellEditor".equals(evt.getPropertyName())) {
            if (jTable1.isEditing()==false)
                updateValue((JTable) evt.getSource());

               
        }
    }//GEN-LAST:event_jTable1PropertyChange

    public void update(){
    try {
            comunicatie cm=new comunicatie();
            
            ResultSet rs=cm.exQuery("SELECT * FROM FisaService");
            //stergere rezultate anterioare
            while(model.getRowCount()>0){
            model.removeRow(0);
            }
            
            TableColumn id=jTable1.getColumn("IDFisa");
            id.setMaxWidth(0);
            id.setMinWidth(0);
            id.setPreferredWidth(0);
            while(rs.next()) {
                model.insertRow(model.getRowCount(),new Object[]{
                rs.getString("IDFisa"),rs.getString("IDMasina"),rs.getString("Data"),rs.getString("Interventii"),
                    });
            }
            cm.closeChannel(rs);
        } catch (SQLException ex) {
            Logger.getLogger(ScoalaSoferi.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    }
     public int getId(){
        String s=(String) model.getValueAt(jTable1.getSelectedRow(), 0);
        return Integer.parseInt(s);
   // return Integer.parseint( (String) model.getValueAt(jTable1.getSelectedRow(), 0));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void updateValue(javax.swing.JTable obj) {
         comunicatie cm=new comunicatie();
                int i;
                    i=obj.getEditingRow();
                            System.out.println(i);
                            
               try {
                 
                         cm.execute("Update Fisaservice" +
                              " set data='"+model.getValueAt(i,2)+"' , interventii='"+model.getValueAt(i,3)+"' where idFisa="+model.getValueAt(i,0));
               } catch (SQLException ex) {
                 
               }    }
}
